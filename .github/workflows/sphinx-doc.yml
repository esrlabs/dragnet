# This workflow will generate the Sphinx documentation

name: Sphinx Documentation

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      COVERAGE: true

    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
      # change this to (see https://github.com/ruby/setup-ruby#versioning):
      # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.7
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: Test Results and Coverage
      run:
        bundler exec rspec --format html -o documentation/build/html/test_results/index.html
    - name: Move Coverage Report
      run:
        mv coverage documentation/build/html/coverage
    - name: Static Analysis Report
      run:
        bundler exec rubocop . --format html -o documentation/build/html/static_code_analysis/index.html || true
    - name: Generate YARD documentation
      run: |
        bundler exec yard doc . --exclude vendor/ -o documentation/build/html/yard
    - name: Export Requirements
      run: |
        bundler exec dim_to_rst req/config.yml documentation/source/requirements
    - name: Install pandoc
      run: |
        sudo apt-get update
        sudo apt-get -y install pandoc
    - name: Convert README
      run: |
        pandoc CHANGELOG.md --from markdown --to rst -s -o documentation/source/introduction/changelog.rst
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      working-directory: ./documentation
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Generate Documentation
      working-directory: ./documentation
      run: |
        make html
    - name: Upload static files as artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: documentation/build/html/

  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
